// ============================================================================
// File: common.fbs
// Namespace: fbs.cuda.ipc.api
// ---------------------------------------------------------------------------
// Common FlatBuffers definitions shared across CUDA IPC requests and responses
// ============================================================================

namespace fbs.cuda.ipc.api;

// ---------------------------------------------------------------------------
// UUID Representation
// 128-bit unique identifier
// ---------------------------------------------------------------------------
struct UUID {
  msb: uint64;
  lsb: uint64;
}

// ---------------------------------------------------------------------------
// CUDA IPC Handle Representation
// 64-byte binary handle used for CUDA inter-process communication (cudaIpcMemHandle_t)
// ---------------------------------------------------------------------------
struct CudaIPCHandle {
  value: [ubyte:64];  // 64-byte binary handle
}

// ---------------------------------------------------------------------------
// Expiration Strategies
// ---------------------------------------------------------------------------

// Expire GPU buffer after a specified access count (includes CreateGPUBuffer)
table AccessCountOption {
  access_count: uint64;  // Number of accesses before expiration
}

// Expire GPU buffer when time-to-live (TTL) since creation is reached
table TtlCreationOption {
  ttl: uint64;  // TTL in seconds
}

// ---------------------------------------------------------------------------
// Union for expiration strategies
// ---------------------------------------------------------------------------
union ExpirationOptions {
  AccessCountOption,
  TtlCreationOption
}

// ---------------------------------------------------------------------------
// Expiration Option Wrapper
// ---------------------------------------------------------------------------
table ExpirationOption {
  option: ExpirationOptions (required);
}
